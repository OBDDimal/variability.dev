name: Django CI

on:
  push:
    branches: [dev, issue-116-sonarqube-per-branch]
  pull_request:
    branches: [dev, issue-116-sonarqube-per-branch]

jobs:

  install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: save-env
        id: python-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-pip-${{ hashFiles('requirements.txt') }}
          
      - name: make env
        run: |
          mv './ddueruemweb/.env.testing' './ddueruemweb/.env'
          cat ./ddueruemweb/.env
          
      - name: upload-env
        uses: actions/upload-artifact@v2
        with:
          name: django-env
          path:  ${{ github.workspace }}/backend/ddueruemweb/.env

      - name: Install Dependencies
        #if: steps.python-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
  backend-migrations:
    needs: install
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          
      #- uses: actions/cache@v2
      #  id: migration-cache
      #  with:
      #    path: ./**/migrations/*
      #    key: migrationskey
          
      - name: Download env
        uses: actions/download-artifact@v2
        with:
          name: django-env
          path: ${{ github.workspace }}/backend/ddueruemweb

      - name: Install Dependencies
        #if: steps.python-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate --run-syncdb

  test:
    needs: backend-migrations
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          
      #- uses: actions/cache@v2
      #  id: migration-cache
      #  with:
      #    path: ./**/migrations/*
      #    key: migrationskey
          
      - name: Download env
        uses: actions/download-artifact@v2
        with:
          name: django-env
          path: ${{ github.workspace }}/backend/ddueruemweb


      - name: Install Dependencies
        #if: steps.python-cache.outputs.cache-hit != 'true'  #todo: fix caching of django-environ
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Migrations
        #if: steps.migration-cache.outputs.cache-hit != 'true'
        run: |
          python manage.py makemigrations
          python manage.py migrate --run-syncdb

      - name: Run Tests
        run: |
          python manage.py test
          
      - name: Run Coverage
        run: |
          coverage erase
          coverage run manage.py test
          coverage xml -i
          
      - name: Upload Sonar Test Coverage Backend
        uses: actions/upload-artifact@v2
        with:
          name: sonar-coverage-backend
          path: ${{ github.workspace }}/backend/coverage.xml

  sonarqube:
    needs: test
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        
    - name: Download Sonar Test Coverage Backend
      uses: actions/download-artifact@v2
      with:
        name: sonar-coverage-backend
        path: ${{ github.workspace }}/backend
        
    - name: Set Sonarqube Project Name
      run: >
        slashreplace=$(echo "${{ github.ref }}" | sed -r 's/[\/]+/\\\//g') \
          minusreplace=$(echo "$slashreplace" | sed -r 's/[\-]+/\\\-/g') \
          sed -ir "s/^[#]*\s*sonar\.projectKey=.*/sonar\.projectKey=ddueruem\-web\-backend\-$minusreplace/" ${{ github.workspace }}/backend/sonar-project.properties
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        projectBaseDir: "./backend"
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
